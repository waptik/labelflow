type Mutation {
  createExample(data: ExampleCreateInput!): Example

  createImage(data: ImageCreateInput!): Image
  createManyImages(data: ImageCreateManyInput!): [Image!]!
  getUploadTarget(data: UploadTargetInput!): UploadTarget!
  updateImage(where: ImageWhereUniqueInput!, data: ImageUpdateInput!): Image
  deleteImage(where: ImageWhereUniqueInput!): Image

  createLabel(data: LabelCreateInput!): Label
  updateLabel(where: LabelWhereUniqueInput!, data: LabelUpdateInput!): Label
  deleteLabel(where: LabelWhereUniqueInput!): Label

  createLabelClass(data: LabelClassCreateInput!): LabelClass
  createManyLabelClasses(data: LabelClassCreateManyInput!): [LabelClass!]!
  updateLabelClass(
    where: LabelClassWhereUniqueInput!
    data: LabelClassUpdateInput!
  ): LabelClass
  reorderLabelClass(
    where: LabelClassWhereUniqueInput!
    data: LabelClassReorderInput!
  ): LabelClass
  deleteLabelClass(where: LabelClassWhereUniqueInput!): LabelClass

  updateIogLabel(data: UpdateIogInput!): Label
  createIogLabel(data: CreateIogLabelInput!): Label

  createDataset(data: DatasetCreateInput!): Dataset
  updateDataset(
    where: DatasetWhereUniqueInput!
    data: DatasetUpdateInput!
  ): Dataset
  deleteDataset(where: DatasetWhereUniqueInput!): Dataset
  importDataset(
    where: DatasetWhereUniqueInput!
    data: DatasetImportInput!
  ): ImportStatus
  createWorkspace(
    data: WorkspaceCreateInput!
    options: WorkspaceCreateOptions
  ): Workspace
  updateWorkspace(
    where: WorkspaceWhereUniqueInput!
    data: WorkspaceUpdateInput!
  ): Workspace
  deleteWorkspace(where: WorkspaceWhereUniqueInput!): Workspace

  createMembership(data: MembershipCreateInput!): Membership
  updateMembership(
    where: MembershipWhereUniqueInput!
    data: MembershipUpdateInput!
  ): Membership
  deleteMembership(where: MembershipWhereUniqueInput!): Membership
  inviteMember(where: InviteMemberInput!): InvitationResult
  acceptInvitation(where: MembershipWhereUniqueInput!): Membership
  declineInvitation(where: MembershipWhereUniqueInput!): Membership

  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User

  runAiAssistant(data: RunAiAssistantInput!): RunAiAssistantOutput!
}
